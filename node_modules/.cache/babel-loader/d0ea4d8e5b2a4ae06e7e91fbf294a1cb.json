{"ast":null,"code":"var _jsxFileName = \"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport App from './containers/App';\nimport Home from './components/Home';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'tachyons';\nimport { searchRobots, requestRobots } from './redux/reducers';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; //   Below - why-did-you-update to check for avoidable rerenders in app => https://github.com/maicki/why-did-you-update\n//   Will only be used in dev enviroment\n\nif (process.env.NODE_ENV !== 'production') {\n  var _require = require('why-did-you-update'),\n      whyDidYouUpdate = _require.whyDidYouUpdate;\n\n  whyDidYouUpdate(React);\n}\n\nvar logger = createLogger(); // redux-logger\n//Below\n// You need compose() from redux to get addon to work with middleware and to use multiple Middleware=> => => https://github.com/zalmoxisus/redux-devtools-extension#usage\n\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // Below\n// You need combineReducers() from redux to combine all reducers to one root reducer in the store\n\nvar rootReducer = combineReducers({\n  searchRobots: searchRobots,\n  requestRobots: requestRobots\n});\nvar store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware))); //, logger\n// Above = from => const store = createStore (searchRobots, applyMiddleware(logger));\n// Below \n// The provider wraps the app and is responsible for providing the store to all the components in APP\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(Router, {\n  basename: process.env.PUBLIC_URL,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"tc\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/\",\n  component: Home,\n  exact: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/App\",\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}))))), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/index.js"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","compose","combineReducers","createLogger","thunkMiddleware","App","Home","registerServiceWorker","searchRobots","requestRobots","BrowserRouter","Router","Route","Switch","process","env","NODE_ENV","require","whyDidYouUpdate","logger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducer","store","render","PUBLIC_URL","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAO,UAAP;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,kBAA5C;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,KAFJ,EAGIC,MAHJ,QAIS,kBAJT,C,CAMA;AACA;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAAA,iBACfC,OAAO,CAAC,oBAAD,CADQ;AAAA,MAClCC,eADkC,YAClCA,eADkC;;AAEzCA,EAAAA,eAAe,CAACtB,KAAD,CAAf;AACD;;AACD,IAAMuB,MAAM,GAAGhB,YAAY,EAA3B,C,CAA8B;AAE9B;AACA;;AACA,IAAMiB,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CrB,OAAxE,C,CACA;AACA;;AACA,IAAMsB,WAAW,GAAGrB,eAAe,CAAC;AAACM,EAAAA,YAAY,EAAZA,YAAD;AAAeC,EAAAA,aAAa,EAAbA;AAAf,CAAD,CAAnC;AACA,IAAMe,KAAK,GAAGzB,WAAW,CAACwB,WAAD,EAAcH,gBAAgB,CAACpB,eAAe,CAACI,eAAD,CAAhB,CAA9B,CAAzB,C,CAA2F;AAC3F;AAEA;AACA;;AACAP,QAAQ,CAAC4B,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,oBAAC,MAAD;AAAQ,EAAA,QAAQ,EAAEV,OAAO,CAACC,GAAR,CAAYW,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAQ,EAAA,IAAI,EAAC,GAAb;AAAiB,EAAA,SAAS,EAAEpB,IAA5B;AAAkC,EAAA,KAAK,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,MAAZ;AAAmB,EAAA,SAAS,EAAED,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CADJ,CADJ,CADA,CADJ,EAUiBsB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVjB;AAaArB,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider} from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport App from './containers/App';\nimport Home from './components/Home';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'tachyons';\nimport { searchRobots, requestRobots } from './redux/reducers';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n  } from 'react-router-dom';\n\n//   Below - why-did-you-update to check for avoidable rerenders in app => https://github.com/maicki/why-did-you-update\n//   Will only be used in dev enviroment\n\nif (process.env.NODE_ENV !== 'production') {\n  const {whyDidYouUpdate} = require('why-did-you-update');\n  whyDidYouUpdate(React);\n}\nconst logger = createLogger();// redux-logger\n\n//Below\n// You need compose() from redux to get addon to work with middleware and to use multiple Middleware=> => => https://github.com/zalmoxisus/redux-devtools-extension#usage\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// Below\n// You need combineReducers() from redux to combine all reducers to one root reducer in the store\nconst rootReducer = combineReducers({searchRobots, requestRobots});\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));//, logger\n// Above = from => const store = createStore (searchRobots, applyMiddleware(logger));\n\n// Below \n// The provider wraps the app and is responsible for providing the store to all the components in APP\nReactDOM.render(\n    <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"tc\">\n            <Switch>\n                <Route  path=\"/\" component={Home} exact/>\n                <Route path=\"/App\" component={App}/>\n            </Switch>\n        </div>\n    </Router>\n    </Provider> ,document.getElementById('root'));\n               \n                \nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}