{"ast":null,"code":"import _classCallCheck from \"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/components/CounterButton.js\";\nimport React, { Component } from 'react';\n\nvar CounterButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CounterButton, _Component);\n\n  function CounterButton() {\n    var _this;\n\n    _classCallCheck(this, CounterButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CounterButton).call(this));\n\n    _this.updateCount = function () {\n      _this.setState(function (state) {\n        // The recommended way to update state Not this.setState({count:this.state.count + 1})\n        return {\n          count: _this.state.count + 1\n        };\n      });\n    };\n\n    _this.state = {\n      count: 0\n    };\n    return _this;\n  } // A better example of shouldComponentUpdate\n\n\n  _createClass(CounterButton, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      //\n      console.log({\n        nextProps: nextProps,\n        nextState: nextState\n      });\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('CounterButton');\n      return React.createElement(\"button\", {\n        color: this.props.color,\n        onClick: this.updateCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Count: \", this.state.count);\n    }\n  }]);\n\n  return CounterButton;\n}(Component);\n\nexport default CounterButton;","map":{"version":3,"sources":["/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/components/CounterButton.js"],"names":["React","Component","CounterButton","updateCount","setState","state","count","nextProps","nextState","console","log","props","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;IAEMC,a;;;;;AACF,2BAAa;AAAA;;AAAA;;AACT;;AADS,UAYbC,WAZa,GAYC,YAAM;AAChB,YAAKC,QAAL,CAAc,UAAAC,KAAK,EAAI;AAAE;AACrB,eAAO;AAACC,UAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA3B,SAAP;AACH,OAFD;AAGH,KAhBY;;AAET,UAAKD,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAFS;AAKZ,G,CACL;;;;;0CAC0BC,S,EAAWC,S,EAAU;AAAC;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACH,QAAAA,SAAS,EAATA,SAAD;AAAYC,QAAAA,SAAS,EAATA;AAAZ,OAAZ;AACJ,aAAO,IAAP;AACH;;;6BAQW;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aACI;AAAQ,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAA1B;AAAiC,QAAA,OAAO,EAAE,KAAKT,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,KAAKE,KAAL,CAAWC,KADvB,CADJ;AAKH;;;;EA1BuBL,S;;AA6B5B,eAAeC,aAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass CounterButton extends Component {\n    constructor(){\n        super();\n        this.state = {\n            count: 0,\n        }\n    }\n// A better example of shouldComponentUpdate\n    shouldComponentUpdate(nextProps, nextState){//\n        console.log({nextProps, nextState});\n    return true\n}\n    \n    updateCount = () => {\n        this.setState(state => { // The recommended way to update state Not this.setState({count:this.state.count + 1})\n            return {count: this.state.count + 1}\n        });\n    }\n\n    render(){\n        console.log('CounterButton');\n        return  (\n            <button color={this.props.color} onClick={this.updateCount}>\n                Count: {this.state.count}\n            </button>\n        )\n    }\n}\n\nexport default CounterButton;"]},"metadata":{},"sourceType":"module"}