{"map":"{\"version\":3,\"sources\":[\"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/components/Card.js\",\"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/components/CardList.js\",\"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/components/SearchBox.js\",\"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/components/Scroll.js\",\"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/components/Header.js\",\"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/components/CounterButton.js\",\"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/components/ErrorBoundary.js\",\"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/containers/App.js\",\"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/redux/actions.js\",\"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/redux/constants.js\",\"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/components/Home.js\",\"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/registerServiceWorker.js\",\"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/redux/reducers.js\",\"/Users/danielhardiman/Desktop/web dev/projects/robofriends-clean/src/index.js\"],\"names\":[\"Card\",\"_ref\",\"name\",\"email\",\"id\",\"react_default\",\"a\",\"createElement\",\"className\",\"alt\",\"src\",\"concat\",\"CardList\",\"robots\",\"map\",\"user\",\"i\",\"components_Card\",\"key\",\"SearchBox\",\"searchfield\",\"searchChange\",\"type\",\"placeholder\",\"onChange\",\"Scroll\",\"props\",\"style\",\"overflow\",\"border\",\"height\",\"padding\",\"children\",\"Header\",\"Component\",\"nextProps\",\"nextState\",\"console\",\"log\",\"ErrorBoundary\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"hasError\",\"error\",\"info\",\"setState\",\"App\",\"onRequestRobots\",\"_this$props\",\"searchField\",\"onSearchChange\",\"isPending\",\"filteredRobots\",\"filter\",\"robot\",\"toLowerCase\",\"includes\",\"components_Header\",\"components_SearchBox\",\"components_Scroll\",\"components_ErrorBoundary\",\"components_CardList\",\"withRouter\",\"connect\",\"searchRobots\",\"requestRobots\",\"dispatch\",\"event\",\"payload\",\"target\",\"value\",\"fetch\",\"then\",\"response\",\"json\",\"data\",\"catch\",\"Home\",\"Link\",\"to\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"navigator\",\"serviceWorker\",\"register\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"initialStateSearch\",\"initialStateRobots\",\"logger\",\"createLogger\",\"composeEnhancers\",\"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\",\"compose\",\"rootReducer\",\"combineReducers\",\"arguments\",\"length\",\"undefined\",\"action\",\"assign\",\"store\",\"createStore\",\"applyMiddleware\",\"thunkMiddleware\",\"ReactDOM\",\"render\",\"es\",\"BrowserRouter\",\"basename\",\"process\",\"Switch\",\"Route\",\"path\",\"component\",\"exact\",\"document\",\"getElementById\",\"URL\",\"origin\",\"addEventListener\",\"status\",\"headers\",\"get\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\",\"registerServiceWorker\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\n\\nconst Card = ({ name, email, id }) => {\\n  return (\\n    <div className='bh2 dib br4 pa3 pv4 ma2 grow bw2 hoverGlow backGradient'>\\n      <img alt='robots' src={`https://robohash.org/bgset_bg1/${id}?size=200x200`} />\\n      <div>\\n        <h2 className='f5 mt4 lightest-blue'>{name}</h2>\\n        <p className='f5 lightest-blue'>{email}</p>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default Card;\\n\",\"import React from 'react';\\nimport Card from './Card';\\n\\nconst CardList = ({ robots }) => {\\n  // if (true){\\n  //   throw new Error ('Noooooooooo!');\\n  // }\\n  // console.log('CardList')\\n  return (\\n    <div>\\n      {\\n        robots.map((user, i) => {\\n          return (\\n            <Card\\n              key={i}\\n              id={robots[i].id}\\n              name={robots[i].name}\\n              email={robots[i].email}\\n              />\\n          );\\n        })\\n      }\\n    </div>\\n  );\\n}\\n\\nexport default CardList;\",\"import React from 'react';\\n\\nconst SearchBox = ({ searchfield, searchChange }) => {\\n  // console.log('SearchBox')\\n  return (\\n    <div className='pa2'>\\n      <input\\n        className='pa3 ba b--green bg-lightest-blue mb5'\\n        type='search'\\n        placeholder='search robots'\\n        onChange={searchChange}\\n      />\\n    </div>\\n  );\\n}\\n\\nexport default SearchBox;\",\"import React from 'react';\\n\\nconst Scroll = (props) => {\\n  return (\\n    <div style={{ overflow: 'scroll', border: 'none', height: '500px', padding: '2rem'}}>\\n      {props.children}\\n    </div>\\n  );\\n};\\n\\nexport default Scroll;\",\"import React, {Component} from 'react';\\nimport CounterButton from '../components/CounterButton';\\n\\n\\nclass Header extends Component {\\n//To stop rerendering\\n    shouldComponentUpdate(nextProps, nextState){//Default params/just showing eg\\n        return false //Default is true so we set it to false => NEVER UPDATE THIS COMPONENT\\n    }\\n    render(){\\n        console.log('Header');\\n        return  (\\n        <div className=\\\"\\\">\\n        <h1 className='mt5 f2'>RoboFriends</h1>\\n        {/* <CounterButton color={'red'}/> */}\\n        </div>\\n        )\\n    }\\n}\\n\\nexport default Header;\",\"import React, {Component} from 'react';\\n\\nclass CounterButton extends Component {\\n    constructor(){\\n        super();\\n        this.state = {\\n            count: 0,\\n        }\\n    }\\n// A better example of shouldComponentUpdate\\n    shouldComponentUpdate(nextProps, nextState){//\\n        if (this.state.count !== nextState.count){ //Only update if our state count is different to our nextState.count => our count changes\\n    return true\\n    }else return false;\\n        }\\n    \\n    updateCount = () => {\\n        this.setState(state => { // The recommended way to update state Not this.setState({count:this.state.count + 1})\\n            return {count: this.state.count + 1}\\n        });\\n    }\\n\\n    render(){\\n        console.log('CounterButton');\\n        return  (\\n            <button color={this.props.color} onClick={this.updateCount}>\\n                Count: {this.state.count}\\n            </button>\\n        )\\n    }\\n}\\n\\nexport default CounterButton;\",\"import React, {Component} from 'react';\\n\\nclass ErrorBoundary extends Component {\\n    constructor(props) {\\n        super();\\n        this.state = {\\n            hasError: false\\n        }\\n    }\\n    componentDidCatch(error, info) {\\n        this.setState({hasError: true})\\n    }\\n\\nrender(){\\n    if (this.state.hasError) {\\n        return <h1>Ooooops. That is not good</h1>\\n    }\\n        return this.props.children\\n       \\n\\n\\n}\\n\\n\\n\\n}\\n\\nexport default ErrorBoundary;\\n\",\"import React, { Component } from 'react';\\nimport {connect} from 'react-redux';\\nimport CardList from '../components/CardList';\\nimport SearchBox from '../components/SearchBox';\\nimport Scroll from '../components/Scroll';\\nimport Header from '../components/Header';\\nimport './App.css';\\nimport ErrorBoundary from '../components/ErrorBoundary';\\nimport { withRouter } from 'react-router-dom'\\n\\n\\nimport {setSearchField, requestRobots} from '../redux/actions';\\n\\n/////////connect(mapStateToProps, mapDispatchToProps)///////////////////////\\n\\n// What state it needs to listen to and send down as props\\nconst mapStateToProps = state => {\\n  return {\\n    searchField: state.searchRobots.searchField,\\n    robots: state.requestRobots.robots,\\n    isPending: state.requestRobots.isPending,\\n    error: state.requestRobots.error,\\n  }\\n}\\n// Single Reducer => state.searchField / Multiple Reducers you have to state the reducer to point to state.searchRobots.searchField\\n// That's because you have only ONE reducer  existing in createStore() .  So that store directly refers to only one reducer (searchRobots) which returns the state searchField.  When you have multiple reducers you COMBINE them into one rootReducer and this rootReducer returns multiple reducers, if you want to refer to the state of one of them you have to grab them by reducers name... So to sum it up: if you refer in createStore() directly to the one reducer  you grab it's state throug state.stateName (in your case state.searchField) , but if you refer in createStore() to one rootReducer, which contains multiple combined reducers and returns them(not their state), you grab each state like this:  state.reducerName.stateName (in your case, when you will add more reducers and combine them in one root reducer it will be state.searchRobots.searchField) Hope that helped\\n\\n// What props it should listen to that are actions, then dispatch it to the reducers as a prop function(onSearchChange(event))\\nconst mapDispatchToProps = (dispatch) => {\\n  return{\\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\\n    onRequestRobots: () => dispatch(requestRobots())//Is the same as requestRobots(dispatch)\\n  }\\n}\\n/////////////////////////////////////////////////////////////////////////////\\n\\n\\nclass App extends Component {\\n \\n  componentDidMount() {\\n    this.props.onRequestRobots();\\n  } \\n\\n  render() {\\n\\n    const { searchField, onSearchChange, robots, isPending } = this.props; /* From connect(properties at top)*/\\n    const filteredRobots = robots.filter(robot =>{\\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\\n    })\\n    return (\\n      <div className='tc'>\\n        <Header/>\\n        <SearchBox searchChange={onSearchChange}/>\\n          <Scroll>\\n            {isPending ? \\n                <h1>Loading</h1> :\\n                <ErrorBoundary>\\n                  <CardList robots={filteredRobots} />\\n                </ErrorBoundary>\\n            }\\n          </Scroll>\\n      </div>\\n      )\\n\\n  }\\n}\\n\\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps )(App));\",\"import {\\n    CHANGE_SEARCH_FIELD,\\n    REQUEST_ROBOTS_PENDING,\\n    REQUEST_ROBOTS_SUCCESS,\\n    REQUEST_ROBOTS_FAILED} from './constants.js';\\n\\n// Below - First action => setSearchField()\\n// -recieves a text input\\n// -returns a Object with a type and a payload that it sends to the reducer\\n// Notes - \\n// Curly brackets surounded by parenthesis to avoid using 'return'\\n// Imported a variable containing a string name so that if its spelt wrong it will throw error\\n// React/redux will not throw error on a string type but will on a mispelt variable \\n\\n\\nexport const setSearchField = (text) => ({\\ntype: CHANGE_SEARCH_FIELD,\\npayload: text\\n})\\n\\n// HIGHER ORDER FUNCTION => RETURNS ANOTHER FUNCTION that takes dispatch and runs the second half of the function\\nexport const requestRobots = () => (dispatch) => {\\ndispatch({type: REQUEST_ROBOTS_PENDING});//Straight away dispatch pending action \\nfetch('https://jsonplaceholder.typicode.com/users')\\n.then(response=> response.json())\\n.then(data => dispatch({type: REQUEST_ROBOTS_SUCCESS, payload: data}))//if we get data back dispatch success and the payload is the data recieved\\n.catch(error => dispatch({type: REQUEST_ROBOTS_FAILED, payload: error}))//if we get a error we dispatch failed and the payload is the error msg\\n}\\n\\n\\n\",\"export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\",\"import React from 'react';\\nimport {Link} from 'react-router-dom';\\n\\nconst Home = () => {\\n  return (\\n    <div className='bh2 dib br4 pa3 pv4 ma2 bw2 hoverGlow backGradient'>\\n        <img alt='robots' src={`https://robohash.org/bgset_bg1/5?size=200x200`} />\\n        <h2 className='f5 mt4 lightest-blue'>Welcome To RoboFriends!!</h2>\\n        <p className='f5 lightest-blue'>Follow the link to find our collection of robots ready for action!</p>\\n        <Link to=\\\"/App\\\" >Go to Robots</Link>\\n    </div>\\n  );\\n}\\n\\nexport default Home;\\n\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport default function register() {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Lets check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl);\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import {\\n    CHANGE_SEARCH_FIELD,\\n    REQUEST_ROBOTS_PENDING,\\n    REQUEST_ROBOTS_SUCCESS,\\n    REQUEST_ROBOTS_FAILED} from './constants.js';\\n\\n// Below \\n// A initial state that resets the state at the start of the app\\nconst initialStateSearch = {\\n    searchField:''\\n}\\n\\n// Below \\n// Reducers recieve a state (default= inittial state) and a action(default = empty object) and if \\n// they receive any actions that concerns them, they will act on it and change the state accordingly\\nexport const searchRobots = (state= initialStateSearch, action={})=>{\\n    switch(action.type){\\n        case CHANGE_SEARCH_FIELD:\\n        // Returning a new state Object.assign{}, which will have everything from the state and we\\n        // are going to update the searchField Property with action.payload\\n        // shorthand alternative...\\n        // return {...state, searchField:action.payload}\\n        return Object.assign({}, state, {searchField:action.payload});\\n        default:\\n            return state;\\n    }\\n} \\n\\nconst initialStateRobots = {\\n    isPending: false,\\n    robots: [],\\n    error: ''\\n}\\n\\nexport const requestRobots = (state=initialStateRobots, action={})=>{\\n    switch(action.type){\\n        case REQUEST_ROBOTS_PENDING:\\n            return Object.assign({}, state, {isPending: true})\\n        case REQUEST_ROBOTS_SUCCESS:\\n            return Object.assign({},state, {robots: action.payload, isPending: false})\\n        case REQUEST_ROBOTS_FAILED:\\n            return Object.assign({},state, {error: action.payload, isPending: false})\\n        default:\\n            return state;\\n    }\\n\\n}\\n\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport { Provider} from 'react-redux';\\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\\nimport { createLogger } from 'redux-logger';\\nimport thunkMiddleware from 'redux-thunk';\\nimport App from './containers/App';\\nimport Home from './components/Home';\\nimport registerServiceWorker from './registerServiceWorker';\\nimport 'tachyons';\\nimport { searchRobots, requestRobots } from './redux/reducers';\\nimport {\\n    BrowserRouter as Router,\\n    Route,\\n    Switch\\n  } from 'react-router-dom';\\n\\n//   Below - why-did-you-update to check for avoidable rerenders in app => https://github.com/maicki/why-did-you-update\\n//   Will only be used in dev enviroment\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  const {whyDidYouUpdate} = require('why-did-you-update');\\n  whyDidYouUpdate(React);\\n}\\nconst logger = createLogger();// redux-logger\\n\\n//Below\\n// You need compose() from redux to get addon to work with middleware and to use multiple Middleware=> => => https://github.com/zalmoxisus/redux-devtools-extension#usage\\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\\n// Below\\n// You need combineReducers() from redux to combine all reducers to one root reducer in the store\\nconst rootReducer = combineReducers({searchRobots, requestRobots});\\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware, logger)));\\n// Above = from => const store = createStore (searchRobots, applyMiddleware(logger));\\n\\n// Below \\n// The provider wraps the app and is responsible for providing the store to all the components in APP\\nReactDOM.render(\\n    <Provider store={store}>\\n    <Router basename={process.env.PUBLIC_URL}>\\n        <div className=\\\"tc\\\">\\n            <Switch>\\n                <Route  path=\\\"/\\\" component={Home} exact/>\\n                <Route path=\\\"/App\\\" component={App}/>\\n            </Switch>\\n        </div>\\n    </Router>\\n    </Provider> ,document.getElementById('root'));\\n               \\n                \\nregisterServiceWorker();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{32:function(e,t,n){e.exports=n(55)},43:function(e,t,n){},48:function(e,t,n){},55:function(e,t,n){\"use strict\";n.r(t);var o=n(0),a=n.n(o),r=n(25),c=n.n(r),i=(n(43),n(16)),s=n(12),l=n(28),u=n(29),h=n(7),d=n(8),b=n(11),m=n(9),f=n(10),p=function(e){var t=e.name,n=e.email,o=e.id;return a.a.createElement(\"div\",{className:\"bh2 dib br4 pa3 pv4 ma2 grow bw2 hoverGlow backGradient\"},a.a.createElement(\"img\",{alt:\"robots\",src:\"https://robohash.org/bgset_bg1/\".concat(o,\"?size=200x200\")}),a.a.createElement(\"div\",null,a.a.createElement(\"h2\",{className:\"f5 mt4 lightest-blue\"},t),a.a.createElement(\"p\",{className:\"f5 lightest-blue\"},n)))},E=function(e){var t=e.robots;return a.a.createElement(\"div\",null,t.map(function(e,n){return a.a.createElement(p,{key:n,id:t[n].id,name:t[n].name,email:t[n].email})}))},g=function(e){e.searchfield;var t=e.searchChange;return a.a.createElement(\"div\",{className:\"pa2\"},a.a.createElement(\"input\",{className:\"pa3 ba b--green bg-lightest-blue mb5\",type:\"search\",placeholder:\"search robots\",onChange:t}))},v=function(e){return a.a.createElement(\"div\",{style:{overflow:\"scroll\",border:\"none\",height:\"500px\",padding:\"2rem\"}},e.children)},O=(o.Component,function(e){function t(){return Object(h.a)(this,t),Object(b.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(f.a)(t,e),Object(d.a)(t,[{key:\"shouldComponentUpdate\",value:function(e,t){return!1}},{key:\"render\",value:function(){return console.log(\"Header\"),a.a.createElement(\"div\",{className:\"\"},a.a.createElement(\"h1\",{className:\"mt5 f2\"},\"RoboFriends\"))}}]),t}(o.Component)),w=(n(48),function(e){function t(e){var n;return Object(h.a)(this,t),(n=Object(b.a)(this,Object(m.a)(t).call(this))).state={hasError:!1},n}return Object(f.a)(t,e),Object(d.a)(t,[{key:\"componentDidCatch\",value:function(e,t){this.setState({hasError:!0})}},{key:\"render\",value:function(){return this.state.hasError?a.a.createElement(\"h1\",null,\"Ooooops. That is not good\"):this.props.children}}]),t}(o.Component)),j=n(59),R=function(e){function t(){return Object(h.a)(this,t),Object(b.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(f.a)(t,e),Object(d.a)(t,[{key:\"componentDidMount\",value:function(){this.props.onRequestRobots()}},{key:\"render\",value:function(){var e=this.props,t=e.searchField,n=e.onSearchChange,o=e.robots,r=e.isPending,c=o.filter(function(e){return e.name.toLowerCase().includes(t.toLowerCase())});return a.a.createElement(\"div\",{className:\"tc\"},a.a.createElement(O,null),a.a.createElement(g,{searchChange:n}),a.a.createElement(v,null,r?a.a.createElement(\"h1\",null,\"Loading\"):a.a.createElement(w,null,a.a.createElement(E,{robots:c}))))}}]),t}(o.Component),y=Object(j.a)(Object(i.b)(function(e){return{searchField:e.searchRobots.searchField,robots:e.requestRobots.robots,isPending:e.requestRobots.isPending,error:e.requestRobots.error}},function(e){return{onSearchChange:function(t){return e({type:\"CHANGE_SEARCH_FIELD\",payload:t.target.value})},onRequestRobots:function(){return e(function(e){e({type:\"REQUEST_ROBOTS_PENDING\"}),fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(t){return e({type:\"REQUEST_ROBOTS_SUCCESS\",payload:t})}).catch(function(t){return e({type:\"REQUEST_ROBOTS_FAILED\",payload:t})})})}}})(R)),S=n(56),_=function(){return a.a.createElement(\"div\",{className:\"bh2 dib br4 pa3 pv4 ma2 bw2 hoverGlow backGradient\"},a.a.createElement(\"img\",{alt:\"robots\",src:\"https://robohash.org/bgset_bg1/5?size=200x200\"}),a.a.createElement(\"h2\",{className:\"f5 mt4 lightest-blue\"},\"Welcome To RoboFriends!!\"),a.a.createElement(\"p\",{className:\"f5 lightest-blue\"},\"Follow the link to find our collection of robots ready for action!\"),a.a.createElement(S.a,{to:\"/App\"},\"Go to Robots\"))},C=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function N(e){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var t=e.installing;t.onstatechange=function(){\"installed\"===t.state&&(navigator.serviceWorker.controller?console.log(\"New content is available; please refresh.\"):console.log(\"Content is cached for offline use.\"))}}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}n(54);var k={searchField:\"\"},T={isPending:!1,robots:[],error:\"\"},F=n(58),L=n(60),U=n(57),D=Object(l.createLogger)(),P=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||s.d,A=Object(s.c)({searchRobots:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:k,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};switch(t.type){case\"CHANGE_SEARCH_FIELD\":return Object.assign({},e,{searchField:t.payload});default:return e}},requestRobots:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:T,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};switch(t.type){case\"REQUEST_ROBOTS_PENDING\":return Object.assign({},e,{isPending:!0});case\"REQUEST_ROBOTS_SUCCESS\":return Object.assign({},e,{robots:t.payload,isPending:!1});case\"REQUEST_ROBOTS_FAILED\":return Object.assign({},e,{error:t.payload,isPending:!1});default:return e}}}),G=Object(s.e)(A,P(Object(s.a)(u.a,D)));c.a.render(a.a.createElement(i.a,{store:G},a.a.createElement(F.a,{basename:\"/robofriends\"},a.a.createElement(\"div\",{className:\"tc\"},a.a.createElement(L.a,null,a.a.createElement(U.a,{path:\"/\",component:_,exact:!0}),a.a.createElement(U.a,{path:\"/App\",component:y}))))),document.getElementById(\"root\")),function(){if(\"serviceWorker\"in navigator){if(new URL(\"/robofriends\",window.location).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var e=\"\".concat(\"/robofriends\",\"/service-worker.js\");C?function(e){fetch(e).then(function(t){404===t.status||-1===t.headers.get(\"content-type\").indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):N(e)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(e):N(e)})}}()}},[[32,1,2]]]);","extractedComments":[]}